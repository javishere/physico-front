{"version":3,"sources":["libs/contextLib.js","components/PatientDetails.js","components/PatientsList.js","containers/AllPatients.js","connections/patients.js","containers/Home.js","containers/NotFound.js","libs/errorLib.js","libs/hooksLib.js","components/LoaderButton.js","containers/Login.js","containers/Signup.js","Routes.js","App.js","config.js","index.js"],"names":["AppContext","createContext","useAppContext","useContext","PatientDetails","props","patient","ListGroup","as","ListGroupItem","key","address","PatientsList","patients","map","index","Card","Accordion","Toggle","Button","variant","eventKey","name","lastName1","lastName2","Collapse","className","Header","ButtonToolbar","InputGroup","Prepend","Text","FormControl","type","placeholder","aria-label","aria-describedby","AllPatients","state","error","isLoaded","API","get","then","setState","this","React","Component","Home","Container","fluid","Row","Col","NotFound","onError","message","toString","Error","alert","useFormFields","initialState","useState","fields","setValues","event","target","id","value","LoaderButton","isLoading","disabled","Spinner","animation","size","role","children","Login","history","useHistory","userHasAuthenticated","setIsLoading","email","password","handleFieldChange","a","preventDefault","Auth","signIn","push","Form","onSubmit","FormGroup","controlId","FormLabel","autoFocus","onChange","block","length","Signup","confirmPassword","confirmationCode","newUser","setNewUser","handleSubmit","signUp","username","handleConfirmationSubmit","confirmSignUp","FormText","Routes","exact","path","App","isAuthenticated","isAuthenticating","setIsAuthenticating","currentSession","signOut","useEffect","onLoad","Navbar","bg","collapseOnSelect","Brand","href","Nav","Link","onClick","Provider","REGION","BUCKET","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","Amplify","configure","mandatorySignIn","region","config","userPoolId","identityPoolId","userPoolWebClientId","Storage","bucket","endpoints","endpoint","custom_header","getIdToken","getJwtToken","Authorization","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.c580f780.chunk.js","sourcesContent":["import { useContext, createContext } from \"react\";\r\n\r\nexport const AppContext = createContext(null);\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}","import React from 'react'\r\nimport { ListGroup, ListGroupItem, Tab, Tooltip, Row, Button, Container } from 'react-bootstrap'\r\n\r\nexport default function PatientDetails(props) {\r\n    const patient = props.patient;\r\n    return (\r\n        <ListGroup as=\"ul\">\r\n            <ListGroupItem as=\"li\" key={patient.address}>{patient.address}</ListGroupItem>\r\n        </ListGroup>\r\n    )\r\n} ","import React from 'react'\r\nimport { Button, Accordion, Card, Container, ButtonGroup, ButtonToolbar, Table, InputGroup, FormControl } from 'react-bootstrap'\r\nimport {Search} from 'react-bootstrap-icons'\r\n\r\nimport PatientDetails from './PatientDetails'\r\n\r\nfunction PatientsList(props) {\r\n    const patients = props.patients.map((patient, index) => {\r\n        return (\r\n            <Card>\r\n                <Accordion.Toggle as={Button} variant=\"secondary\" eventKey={index + 1}>\r\n                    {patient.name + ' ' + patient.lastName1 + ' ' + patient.lastName2}\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={index + 1}>\r\n                    <PatientDetails patient={patient} />\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        )\r\n    });\r\n    return (\r\n        <Card className=\"mt-4\">\r\n            <Card.Header >\r\n                <ButtonToolbar className=\"justify-content-between\">\r\n                    <h4> Patients</h4>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend >\r\n                            <InputGroup.Text><Search/></InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            aria-label=\"Input group example\"\r\n                            aria-describedby=\"btnGroupAddon\"\r\n                        />\r\n                    </InputGroup>\r\n                </ButtonToolbar>\r\n            </Card.Header>\r\n            <Accordion>\r\n                {patients}\r\n            </Accordion>\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nexport default PatientsList; ","import React from \"react\"\r\nimport \"./AllPatients.css\"\r\nimport PatientsList from \"../components/PatientsList\"\r\nimport getAllPatients from \"../connections/patients\"\r\n\r\nclass AllPatients extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            patients: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        getAllPatients().then(\r\n            patients => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    patients: patients\r\n                });\r\n            },\r\n            error => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n        )\r\n    }\r\n    render() {\r\n        return (<PatientsList patients = {this.state.patients}/>)\r\n    }\r\n} \r\n\r\n\r\nexport default AllPatients","import fetch from 'isomorphic-fetch'\r\nimport { API } from \"aws-amplify\"\r\n\r\nexport default function getAllPatients(){\r\n    // return fetch('https://c9p5u8gzw7.execute-api.eu-west-1.amazonaws.com/Stage/clinica/getAllPatients')\r\n    //     .then(res => res.json())\r\n    return API.get(\"physico\", \"/clinica/getAllPatients\")\r\n}","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport './Home.css'\r\nimport AllPatients from \"./AllPatients\"\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col >\r\n          <AllPatients className=\"mt-4\" />\r\n        </Col>\r\n        <Col>\r\n          <div className=\"Home\">\r\n            <div className=\"lander\">\r\n              <h1>Physico</h1>\r\n              <p>Changing the physiotherapy</p>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Container>\r\n\r\n  );\r\n}","import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"NotFound\">\r\n      <h3>Sorry, page not found!</h3>\r\n    </div>\r\n  );\r\n}","export function onError(error) {\r\n    let message = error.toString();\r\n  \r\n    // Auth errors\r\n    if (!(error instanceof Error) && error.message) {\r\n      message = error.message;\r\n    }\r\n  \r\n    alert(message);\r\n  }","import { useState } from \"react\";\r\n\r\nexport function useFormFields(initialState) {\r\n  const [fields, setValues] = useState(initialState);\r\n\r\n  return [\r\n    fields,\r\n    function(event) {\r\n      setValues({\r\n        ...fields,\r\n        [event.target.id]: event.target.value\r\n      });\r\n    }\r\n  ];\r\n}","import React from \"react\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\nimport \"./LoaderButton.css\";\r\n\r\nexport default function LoaderButton({\r\n    isLoading,\r\n    className = \"\",\r\n    disabled = false,\r\n    ...props\r\n}) {\r\n    return (\r\n        <Button\r\n            className={`LoaderButton ${className}`}\r\n            disabled={disabled || isLoading}\r\n            {...props}\r\n        >\r\n            {isLoading && <Spinner animation=\"grow\" size= \"sm\" role=\"status\"/>}\r\n            {props.children}\r\n        </Button>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { Button, FormGroup, FormControl, FormLabel, Container, Form, Alert } from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport \"./Login.css\";\r\n\r\nexport default function Login() {\r\n    const history = useHistory();    \r\n    const { userHasAuthenticated } = useAppContext();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        email: \"\",\r\n        password: \"\"\r\n      });\r\n\r\n    function validateForm() {\r\n        return fields.email.length > 0 && fields.password.length > 0;\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        try {\r\n            await Auth.signIn(fields.email, fields.password);\r\n            userHasAuthenticated(true)\r\n            history.push(\"/\");\r\n        } catch (e) {\r\n            onError(e);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"Login\">\r\n            <Form onSubmit={handleSubmit}>\r\n                <FormGroup controlId=\"email\">\r\n                    <FormLabel>Email</FormLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={fields.email}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"password\" >\r\n                    <FormLabel>Password</FormLabel>\r\n                    <FormControl\r\n                        value={fields.password}\r\n                        onChange={handleFieldChange}\r\n                        type=\"password\"\r\n                    />\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    type=\"submit\"\r\n                    variant=\"dark\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateForm()}\r\n                >\r\n                    {!isLoading && \"Login\"}\r\n                </LoaderButton>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FormText,\r\n    FormGroup,\r\n    FormControl,\r\n    FormLabel\r\n} from \"react-bootstrap\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport \"./Signup.css\";\r\n\r\nexport default function Signup() {\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        confirmationCode: \"\",\r\n    });\r\n    const history = useHistory();\r\n    const [newUser, setNewUser] = useState(null);\r\n    const { userHasAuthenticated } = useAppContext();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    function validateForm() {\r\n        return (\r\n            fields.email.length > 0 &&\r\n            fields.password.length > 0 &&\r\n            fields.password === fields.confirmPassword\r\n        );\r\n    }\r\n\r\n    function validateConfirmationForm() {\r\n        return fields.confirmationCode.length > 0;\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const newUser = await Auth.signUp({\r\n                username: fields.email,\r\n                password: fields.password,\r\n            });\r\n            setIsLoading(false);\r\n            setNewUser(newUser);\r\n        } catch (e) {\r\n            onError(e);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    async function handleConfirmationSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            await Auth.confirmSignUp(fields.email, fields.confirmationCode);\r\n            await Auth.signIn(fields.email, fields.password);\r\n\r\n            userHasAuthenticated(true);\r\n            history.push(\"/\");\r\n        } catch (e) {\r\n            onError(e);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    function renderConfirmationForm() {\r\n        return (\r\n            <form onSubmit={handleConfirmationSubmit}>\r\n                <FormGroup controlId=\"confirmationCode\" >\r\n                    <FormLabel>Confirmation Code</FormLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"tel\"\r\n                        onChange={handleFieldChange}\r\n                        value={fields.confirmationCode}\r\n                    />\r\n                    <FormText controlId=\"confirmationCodeHelpBlock\">Please check your email for the code.</FormText>\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    type=\"submit\"\r\n                    variant=\"dark\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateConfirmationForm()}\r\n                >\r\n                    Verify\r\n        </LoaderButton>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    function renderForm() {\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <FormGroup controlId=\"email\" >\r\n                    <FormLabel>Email</FormLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={fields.email}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"password\">\r\n                    <FormLabel>Password</FormLabel>\r\n                    <FormControl\r\n                        type=\"password\"\r\n                        value={fields.password}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"confirmPassword\" >\r\n                    <FormLabel>Confirm Password</FormLabel>\r\n                    <FormControl\r\n                        type=\"password\"\r\n                        onChange={handleFieldChange}\r\n                        value={fields.confirmPassword}\r\n                    />\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    variant=\"dark\"\r\n                    type=\"submit\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateForm()}\r\n                >\r\n                    Signup\r\n        </LoaderButton>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"Signup\">\r\n            {newUser === null ? renderForm() : renderConfirmationForm()}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./containers/Home\";\r\nimport NotFound from \"./containers/NotFound\";\r\nimport AllPatients from \"./containers/AllPatients\"\r\nimport Login from \"./containers/Login\"\r\nimport Signup from \"./containers/Signup\"\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/'>\r\n        <Home />\r\n      </Route>\r\n      <Route exact path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route exact path=\"/signup\">\r\n        <Signup />\r\n      </Route>\r\n      <Route path=\"/allPatients\">\r\n        <AllPatients />\r\n      </Route>\r\n      <Route>\r\n        <NotFound />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { AppContext } from \"./libs/contextLib\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { Navbar, NavItem, Nav, Container, Collapse } from \"react-bootstrap\";\r\nimport \"./App.css\";\r\nimport Routes from \"./Routes\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\n\r\n\r\nfunction App() {\r\n    const history = useHistory();\r\n    const [isAuthenticated, userHasAuthenticated] = useState(false);\r\n    const [isAuthenticating, setIsAuthenticating] = useState(true);\r\n    const [userToken, setUserToken] = useState(null)\r\n\r\n    useEffect(() => {\r\n        onLoad();\r\n    }, []);\r\n\r\n    async function onLoad() {\r\n        try {\r\n            await Auth.currentSession() \r\n            userHasAuthenticated(true);\r\n        }\r\n        catch (e) {\r\n            if (e !== 'No current user') {\r\n                alert(e);\r\n            }\r\n        }\r\n\r\n        setIsAuthenticating(false);\r\n    }\r\n\r\n    async function handleLogout() {\r\n        await Auth.signOut();\r\n        userHasAuthenticated(false);\r\n        history.push(\"/login\");\r\n    }\r\n    return (\r\n\r\n        !isAuthenticating &&\r\n        <Container fluid className=\"App\">\r\n            <Navbar bg=\"dark\" variant=\"dark\" collapseOnSelect>\r\n                <Navbar.Brand href=\"#/\">\r\n                    Physico\r\n                </Navbar.Brand>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Nav>\r\n                        {isAuthenticated\r\n                            ? <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\r\n                            : <>\r\n                                <Nav.Link href=\"#/signup\">Singup</Nav.Link>\r\n                                <Nav.Link href=\"#/login\">Login</Nav.Link>\r\n                            </>\r\n                        }\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\r\n                <Routes />\r\n            </AppContext.Provider>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default App;","export default {\r\n    s3: {\r\n      REGION: \"eu-west-1\",\r\n      BUCKET: \"physico\"\r\n    },\r\n    apiGateway: {\r\n      REGION: \"eu-west-1\",\r\n      URL: \" https://c9p5u8gzw7.execute-api.eu-west-1.amazonaws.com/Stage\"\r\n    },\r\n    cognito: {\r\n      REGION: \"eu-west-1\",\r\n      USER_POOL_ID: \"eu-west-1_8FIYqRDvq\",\r\n      APP_CLIENT_ID: \"22bekhru649s03rhqpa7viui70\",\r\n      IDENTITY_POOL_ID: \"eu-west-1:916f14a0-e460-4cef-9a48-2874df73bb9e\"\r\n    }\r\n  };\r\n\r\n  ","import React from 'react'\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { render } from 'react-dom';\r\nimport App from './App'\r\nimport config from './config';\r\nimport { Amplify, Auth } from 'aws-amplify';\r\n\r\n\r\nAmplify.configure({\r\n   Auth: {\r\n     mandatorySignIn: true,\r\n     region: config.cognito.REGION,\r\n     userPoolId: config.cognito.USER_POOL_ID,\r\n     identityPoolId: config.cognito.IDENTITY_POOL_ID,\r\n     userPoolWebClientId: config.cognito.APP_CLIENT_ID\r\n   },\r\n   Storage: {\r\n     region: config.s3.REGION,\r\n     bucket: config.s3.BUCKET,\r\n     identityPoolId: config.cognito.IDENTITY_POOL_ID\r\n   },\r\n   API: {\r\n     endpoints: [\r\n       {\r\n         name: \"physico\",\r\n         endpoint: config.apiGateway.URL,\r\n         region: config.apiGateway.REGION,\r\n         custom_header: async () => { //With Cognito User Pools use this: \r\n            return { Authorization: `Bearer ${(await Auth.currentSession()).getIdToken().getJwtToken()}`\r\n         } \r\n         \r\n         }\r\n       },\r\n     ]\r\n   }\r\n });\r\n\r\nrender(\r\n   <Router basename=\"/\" >\r\n        <App />\r\n   </Router>\r\n,document.getElementById('root'))\r\n    \r\n\r\n\r\n\r\n"],"sourceRoot":""}