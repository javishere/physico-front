{"version":3,"sources":["libs/contextLib.js","components/PatientsList.js","containers/AllPatients.js","connections/patients.js","containers/Home.js","containers/NotFound.js","libs/errorLib.js","libs/hooksLib.js","components/LoaderButton.js","containers/Login.js","containers/Signup.js","Routes.js","App.js","config.js","index.js"],"names":["AppContext","createContext","useAppContext","useContext","PatientsList","props","patients","map","patient","index","key","_id","name","AllPatients","state","error","isLoaded","API","get","then","setState","this","React","Component","Home","Container","Row","Col","xs","lg","className","NotFound","onError","message","toString","Error","alert","useFormFields","initialState","useState","fields","setValues","event","target","id","value","LoaderButton","isLoading","disabled","Button","Spinner","animation","size","role","children","Login","history","useHistory","userHasAuthenticated","setIsLoading","email","password","handleFieldChange","a","preventDefault","Auth","signIn","push","Form","onSubmit","FormGroup","controlId","FormLabel","FormControl","autoFocus","type","onChange","block","variant","length","Signup","confirmPassword","confirmationCode","newUser","setNewUser","handleSubmit","signUp","username","handleConfirmationSubmit","confirmSignUp","FormText","Routes","exact","path","App","isAuthenticated","isAuthenticating","setIsAuthenticating","currentSession","signOut","useEffect","onLoad","fluid","Navbar","bg","collapseOnSelect","Brand","href","Collapse","Nav","Link","onClick","Provider","REGION","BUCKET","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","Amplify","configure","mandatorySignIn","region","config","userPoolId","identityPoolId","userPoolWebClientId","Storage","bucket","endpoints","endpoint","custom_header","getIdToken","getJwtToken","Authorization","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.ceab0625.chunk.js","sourcesContent":["import { useContext, createContext } from \"react\";\r\n\r\nexport const AppContext = createContext(null);\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}","import React from 'react'\r\n\r\nfunction PatientsList(props){\r\n    const patients = props.patients.map((patient, index)=>{\r\n        return <li key = {patient._id}>{patient.name}</li>\r\n    });\r\n    return (\r\n        <ul>\r\n            {patients}\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\nexport default PatientsList; ","import React from \"react\"\r\nimport \"./AllPatients.css\"\r\nimport PatientsList from \"../components/PatientsList\"\r\nimport getAllPatients from \"../connections/patients\"\r\n\r\nclass AllPatients extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            patients: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        getAllPatients().then(\r\n            patients => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    patients: patients\r\n                });\r\n            },\r\n            error => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n        )\r\n    }\r\n    render() {\r\n        return (<PatientsList patients = {this.state.patients}/>)\r\n    }\r\n} \r\n\r\n\r\nexport default AllPatients","import fetch from 'isomorphic-fetch'\r\nimport { API } from \"aws-amplify\"\r\n\r\nexport default function getAllPatients(){\r\n    // return fetch('https://c9p5u8gzw7.execute-api.eu-west-1.amazonaws.com/Stage/clinica/getAllPatients')\r\n    //     .then(res => res.json())\r\n    return API.get(\"physico\", \"/clinica/getAllPatients\")\r\n}","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport './Home.css'\r\nimport AllPatients from \"./AllPatients\"\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col xs lg=\"1\">\r\n          <AllPatients />\r\n        </Col>\r\n        <Col>\r\n          <div className=\"Home\">\r\n            <div className=\"lander\">\r\n              <h1>Physico</h1>\r\n              <p>Changing the physiotherapy</p>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Container>\r\n\r\n  );\r\n}","import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"NotFound\">\r\n      <h3>Sorry, page not found!</h3>\r\n    </div>\r\n  );\r\n}","export function onError(error) {\r\n    let message = error.toString();\r\n  \r\n    // Auth errors\r\n    if (!(error instanceof Error) && error.message) {\r\n      message = error.message;\r\n    }\r\n  \r\n    alert(message);\r\n  }","import { useState } from \"react\";\r\n\r\nexport function useFormFields(initialState) {\r\n  const [fields, setValues] = useState(initialState);\r\n\r\n  return [\r\n    fields,\r\n    function(event) {\r\n      setValues({\r\n        ...fields,\r\n        [event.target.id]: event.target.value\r\n      });\r\n    }\r\n  ];\r\n}","import React from \"react\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\nimport \"./LoaderButton.css\";\r\n\r\nexport default function LoaderButton({\r\n    isLoading,\r\n    className = \"\",\r\n    disabled = false,\r\n    ...props\r\n}) {\r\n    return (\r\n        <Button\r\n            className={`LoaderButton ${className}`}\r\n            disabled={disabled || isLoading}\r\n            {...props}\r\n        >\r\n            {isLoading && <Spinner animation=\"grow\" size= \"sm\" role=\"status\"/>}\r\n            {props.children}\r\n        </Button>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { Button, FormGroup, FormControl, FormLabel, Container, Form, Alert } from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport \"./Login.css\";\r\n\r\nexport default function Login() {\r\n    const history = useHistory();    \r\n    const { userHasAuthenticated } = useAppContext();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        email: \"\",\r\n        password: \"\"\r\n      });\r\n\r\n    function validateForm() {\r\n        return fields.email.length > 0 && fields.password.length > 0;\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        try {\r\n            await Auth.signIn(fields.email, fields.password);\r\n            userHasAuthenticated(true)\r\n            history.push(\"/\");\r\n        } catch (e) {\r\n            onError(e);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"Login\">\r\n            <Form onSubmit={handleSubmit}>\r\n                <FormGroup controlId=\"email\">\r\n                    <FormLabel>Email</FormLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={fields.email}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"password\" >\r\n                    <FormLabel>Password</FormLabel>\r\n                    <FormControl\r\n                        value={fields.password}\r\n                        onChange={handleFieldChange}\r\n                        type=\"password\"\r\n                    />\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    type=\"submit\"\r\n                    variant=\"dark\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateForm()}\r\n                >\r\n                    {!isLoading && \"Login\"}\r\n                </LoaderButton>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FormText,\r\n    FormGroup,\r\n    FormControl,\r\n    FormLabel\r\n} from \"react-bootstrap\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport \"./Signup.css\";\r\n\r\nexport default function Signup() {\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        confirmationCode: \"\",\r\n    });\r\n    const history = useHistory();\r\n    const [newUser, setNewUser] = useState(null);\r\n    const { userHasAuthenticated } = useAppContext();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    function validateForm() {\r\n        return (\r\n            fields.email.length > 0 &&\r\n            fields.password.length > 0 &&\r\n            fields.password === fields.confirmPassword\r\n        );\r\n    }\r\n\r\n    function validateConfirmationForm() {\r\n        return fields.confirmationCode.length > 0;\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const newUser = await Auth.signUp({\r\n                username: fields.email,\r\n                password: fields.password,\r\n            });\r\n            setIsLoading(false);\r\n            setNewUser(newUser);\r\n        } catch (e) {\r\n            onError(e);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    async function handleConfirmationSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            await Auth.confirmSignUp(fields.email, fields.confirmationCode);\r\n            await Auth.signIn(fields.email, fields.password);\r\n\r\n            userHasAuthenticated(true);\r\n            history.push(\"/\");\r\n        } catch (e) {\r\n            onError(e);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    function renderConfirmationForm() {\r\n        return (\r\n            <form onSubmit={handleConfirmationSubmit}>\r\n                <FormGroup controlId=\"confirmationCode\" >\r\n                    <FormLabel>Confirmation Code</FormLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"tel\"\r\n                        onChange={handleFieldChange}\r\n                        value={fields.confirmationCode}\r\n                    />\r\n                    <FormText controlId=\"confirmationCodeHelpBlock\">Please check your email for the code.</FormText>\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    type=\"submit\"\r\n                    variant=\"dark\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateConfirmationForm()}\r\n                >\r\n                    Verify\r\n        </LoaderButton>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    function renderForm() {\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <FormGroup controlId=\"email\" >\r\n                    <FormLabel>Email</FormLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={fields.email}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"password\">\r\n                    <FormLabel>Password</FormLabel>\r\n                    <FormControl\r\n                        type=\"password\"\r\n                        value={fields.password}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"confirmPassword\" >\r\n                    <FormLabel>Confirm Password</FormLabel>\r\n                    <FormControl\r\n                        type=\"password\"\r\n                        onChange={handleFieldChange}\r\n                        value={fields.confirmPassword}\r\n                    />\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    variant=\"dark\"\r\n                    type=\"submit\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateForm()}\r\n                >\r\n                    Signup\r\n        </LoaderButton>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"Signup\">\r\n            {newUser === null ? renderForm() : renderConfirmationForm()}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./containers/Home\";\r\nimport NotFound from \"./containers/NotFound\";\r\nimport AllPatients from \"./containers/AllPatients\"\r\nimport Login from \"./containers/Login\"\r\nimport Signup from \"./containers/Signup\"\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/'>\r\n        <Home />\r\n      </Route>\r\n      <Route exact path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route exact path=\"/signup\">\r\n        <Signup />\r\n      </Route>\r\n      <Route path=\"/allPatients\">\r\n        <AllPatients />\r\n      </Route>\r\n      <Route>\r\n        <NotFound />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { AppContext } from \"./libs/contextLib\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { Navbar, NavItem, Nav, Container, Collapse } from \"react-bootstrap\";\r\nimport \"./App.css\";\r\nimport Routes from \"./Routes\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\n\r\n\r\nfunction App() {\r\n    const history = useHistory();\r\n    const [isAuthenticated, userHasAuthenticated] = useState(false);\r\n    const [isAuthenticating, setIsAuthenticating] = useState(true);\r\n    const [userToken, setUserToken] = useState(null)\r\n\r\n    useEffect(() => {\r\n        onLoad();\r\n    }, []);\r\n\r\n    async function onLoad() {\r\n        try {\r\n            await Auth.currentSession() \r\n            userHasAuthenticated(true);\r\n        }\r\n        catch (e) {\r\n            if (e !== 'No current user') {\r\n                alert(e);\r\n            }\r\n        }\r\n\r\n        setIsAuthenticating(false);\r\n    }\r\n\r\n    async function handleLogout() {\r\n        await Auth.signOut();\r\n        userHasAuthenticated(false);\r\n        history.push(\"/login\");\r\n    }\r\n    return (\r\n\r\n        !isAuthenticating &&\r\n        <Container fluid className=\"App\">\r\n            <Navbar bg=\"dark\" variant=\"dark\" collapseOnSelect>\r\n                <Navbar.Brand href=\"#/\">\r\n                    Physico\r\n                </Navbar.Brand>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Nav>\r\n                        {isAuthenticated\r\n                            ? <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\r\n                            : <>\r\n                                <Nav.Link href=\"#/signup\">Singup</Nav.Link>\r\n                                <Nav.Link href=\"#/login\">Login</Nav.Link>\r\n                            </>\r\n                        }\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\r\n                <Routes />\r\n            </AppContext.Provider>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default App;","export default {\r\n    s3: {\r\n      REGION: \"eu-west-1\",\r\n      BUCKET: \"physico\"\r\n    },\r\n    apiGateway: {\r\n      REGION: \"eu-west-1\",\r\n      URL: \" https://c9p5u8gzw7.execute-api.eu-west-1.amazonaws.com/Stage\"\r\n    },\r\n    cognito: {\r\n      REGION: \"eu-west-1\",\r\n      USER_POOL_ID: \"eu-west-1_8FIYqRDvq\",\r\n      APP_CLIENT_ID: \"22bekhru649s03rhqpa7viui70\",\r\n      IDENTITY_POOL_ID: \"eu-west-1:916f14a0-e460-4cef-9a48-2874df73bb9e\"\r\n    }\r\n  };\r\n\r\n  ","import React from 'react'\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { render } from 'react-dom';\r\nimport App from './App'\r\nimport config from './config';\r\nimport { Amplify, Auth } from 'aws-amplify';\r\n\r\n\r\nAmplify.configure({\r\n   Auth: {\r\n     mandatorySignIn: true,\r\n     region: config.cognito.REGION,\r\n     userPoolId: config.cognito.USER_POOL_ID,\r\n     identityPoolId: config.cognito.IDENTITY_POOL_ID,\r\n     userPoolWebClientId: config.cognito.APP_CLIENT_ID\r\n   },\r\n   Storage: {\r\n     region: config.s3.REGION,\r\n     bucket: config.s3.BUCKET,\r\n     identityPoolId: config.cognito.IDENTITY_POOL_ID\r\n   },\r\n   API: {\r\n     endpoints: [\r\n       {\r\n         name: \"physico\",\r\n         endpoint: config.apiGateway.URL,\r\n         region: config.apiGateway.REGION,\r\n         custom_header: async () => { //With Cognito User Pools use this: \r\n            return { Authorization: `Bearer ${(await Auth.currentSession()).getIdToken().getJwtToken()}`\r\n         } \r\n         \r\n         }\r\n       },\r\n     ]\r\n   }\r\n });\r\n\r\nrender(\r\n   <Router basename=\"/\" >\r\n        <App />\r\n   </Router>\r\n,document.getElementById('root'))\r\n    \r\n\r\n\r\n\r\n"],"sourceRoot":""}