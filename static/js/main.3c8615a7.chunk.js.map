{"version":3,"sources":["libs/contextLib.js","components/PatientDetails.js","components/PatientsList.js","libs/hooksLib.js","containers/AllPatients.js","connections/patients.js","containers/Home.js","containers/NotFound.js","libs/errorLib.js","components/LoaderButton.js","containers/Login.js","containers/Signup.js","Routes.js","App.js","config.js","index.js"],"names":["AppContext","createContext","useAppContext","useContext","PatientDetails","props","patient","ListGroup","as","key","_id","ListGroupItem","address","PatientsList","patientsList","patients","map","index","name","lastName1","lastName2","Card","Accordion","Toggle","Button","variant","eventKey","Collapse","useFormFields","initialState","useState","fields","setValues","event","target","id","value","AllPatients","setError","setIsLoaded","setPatients","allPatients","setAllPatients","search","handleFieldChange","useEffect","filter","toUpperCase","includes","API","get","then","error","Header","className","ButtonToolbar","FormGroup","controlId","InputGroup","Prepend","Text","FormControl","type","placeholder","onChange","autoComplete","Home","Container","fluid","Row","Col","xl","NotFound","onError","message","toString","Error","alert","LoaderButton","isLoading","disabled","Spinner","animation","size","role","children","Login","history","useHistory","userHasAuthenticated","setIsLoading","email","password","a","preventDefault","Auth","signIn","push","Form","onSubmit","FormLabel","autoFocus","block","length","Signup","confirmPassword","confirmationCode","newUser","setNewUser","handleSubmit","signUp","username","handleConfirmationSubmit","confirmSignUp","FormText","Routes","exact","path","App","isAuthenticated","isAuthenticating","setIsAuthenticating","currentSession","signOut","onLoad","Navbar","bg","collapseOnSelect","Brand","href","Nav","Link","onClick","Provider","REGION","BUCKET","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","Amplify","configure","mandatorySignIn","region","config","userPoolId","identityPoolId","userPoolWebClientId","Storage","bucket","endpoints","endpoint","custom_header","getIdToken","getJwtToken","Authorization","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.3c8615a7.chunk.js","sourcesContent":["import { useContext, createContext } from \"react\";\r\n\r\nexport const AppContext = createContext(null);\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}","import React from 'react'\r\nimport { ListGroup, ListGroupItem} from 'react-bootstrap'\r\n\r\nexport default function PatientDetails(props) {\r\n    const patient = props.patient;\r\n    return (\r\n        <ListGroup as=\"ul\" key={patient._id}>\r\n            <ListGroupItem as=\"li\" key={patient.address}>{patient.address}</ListGroupItem>\r\n        </ListGroup>\r\n    )\r\n} ","import React from 'react'\r\nimport { Button, Accordion, Card} from 'react-bootstrap'\r\nimport PatientDetails from './PatientDetails'\r\n\r\n\r\nfunction PatientsList(props) {\r\n    const allPatients = props.patients\r\n    \r\n    const patientsList = allPatients.map((patient, index) => {\r\n            \r\n            let name = patient.name \r\n            let lastName1 = patient.lastName1 \r\n            let lastName2 = patient.lastName2 ? patient.lastName2 : \"\"\r\n            return (\r\n                <Card key={patient._id}>\r\n                    <Accordion.Toggle as={Button} variant=\"secondary\" eventKey={index + 1}>\r\n                        {name + ' ' + lastName1 + ' ' + lastName2}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={index + 1}>\r\n                        <PatientDetails patient={patient} />\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            )\r\n       \r\n    });\r\n    return (\r\n\r\n        <Accordion>\r\n            {patientsList}\r\n        </Accordion>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default PatientsList; ","import { useState } from \"react\";\r\n\r\nexport function useFormFields(initialState) {\r\n  const [fields, setValues] = useState(initialState);\r\n\r\n  return [\r\n    fields,\r\n    function(event) {\r\n      setValues({\r\n        ...fields,\r\n        [event.target.id]: event.target.value\r\n      });\r\n    }\r\n  ];\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport {Card, ButtonToolbar, FormGroup, InputGroup, FormControl} from \"react-bootstrap\"\r\nimport { Search } from 'react-bootstrap-icons'\r\nimport \"./AllPatients.css\"\r\nimport PatientsList from \"../components/PatientsList\"\r\nimport getAllPatients from \"../connections/patients\"\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\n\r\nexport default function AllPatients(props) {\r\n    const [error, setError] = useState(null)\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n    const [patients, setPatients] = useState([])\r\n    const [allPatients, setAllPatients] = useState([])\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        search: ''\r\n    });\r\n    \r\n    useEffect(()=>{\r\n        setPatients(allPatients.filter((patient, index)=>{\r\n            let lastName2 = patient.lastName2 ? patient.lastName2 : \"\"\r\n            return  patient.name.toUpperCase().includes(fields.search.toUpperCase()) || \r\n                    patient.lastName1.toUpperCase().includes(fields.search.toUpperCase()) ||\r\n                    lastName2.toUpperCase().includes(fields.search.toUpperCase())\r\n\r\n            \r\n        }))\r\n    }, [fields.search, allPatients])\r\n\r\n    useEffect(() => {\r\n        getAllPatients().then(\r\n            patients => {\r\n                setIsLoaded(true)\r\n                setAllPatients(patients)\r\n                setPatients(patients)\r\n            },\r\n            error => {\r\n                setIsLoaded(true)\r\n                setError(error)\r\n            }\r\n        )\r\n    }, [])\r\n\r\n    return (\r\n    <Card >\r\n        <Card.Header className=\"pb-0\">\r\n            <ButtonToolbar className=\"justify-content-between\">\r\n                <h4> Patients</h4>\r\n                <FormGroup controlId=\"search\">\r\n                    <InputGroup>\r\n\r\n                        <InputGroup.Prepend >\r\n                            <InputGroup.Text ><Search /></InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            value={fields.search}\r\n                            onChange={handleFieldChange}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </InputGroup>\r\n                </FormGroup>\r\n\r\n            </ButtonToolbar>\r\n        </Card.Header>\r\n        <PatientsList patients={patients} />\r\n    </Card>)\r\n\r\n}\r\n\r\n\r\n","import { API } from \"aws-amplify\"\r\n\r\nexport default function getAllPatients(){\r\n    // return fetch('https://c9p5u8gzw7.execute-api.eu-west-1.amazonaws.com/Stage/clinica/getAllPatients')\r\n    //     .then(res => res.json())\r\n    return API.get(\"physico\", \"/clinica/getAllPatients\")\r\n}","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport './Home.css'\r\nimport AllPatients from \"./AllPatients\"\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col xl={3} className=\"mt-4 h-100 d-inline-block\">\r\n          <AllPatients />\r\n        </Col>\r\n        <Col>\r\n          <div className=\"Home\">\r\n            <div className=\"lander\">\r\n              <h1>Physico</h1>\r\n              <p>Changing the physiotherapy</p>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Container>\r\n\r\n  );\r\n}","import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"NotFound\">\r\n      <h3>Sorry, page not found!</h3>\r\n    </div>\r\n  );\r\n}","export function onError(error) {\r\n    let message = error.toString();\r\n  \r\n    // Auth errors\r\n    if (!(error instanceof Error) && error.message) {\r\n      message = error.message;\r\n    }\r\n  \r\n    alert(message);\r\n  }","import React from \"react\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\nimport \"./LoaderButton.css\";\r\n\r\nexport default function LoaderButton({\r\n    isLoading,\r\n    className = \"\",\r\n    disabled = false,\r\n    ...props\r\n}) {\r\n    return (\r\n        <Button\r\n            className={`LoaderButton ${className}`}\r\n            disabled={disabled || isLoading}\r\n            {...props}\r\n        >\r\n            {isLoading && <Spinner animation=\"grow\" size= \"sm\" role=\"status\"/>}\r\n            {props.children}\r\n        </Button>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport {  FormGroup, FormControl, FormLabel, Container, Form} from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport \"./Login.css\";\r\n\r\nexport default function Login() {\r\n    const history = useHistory();    \r\n    const { userHasAuthenticated } = useAppContext();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        email: \"\",\r\n        password: \"\"\r\n      });\r\n\r\n    function validateForm() {\r\n        return fields.email.length > 0 && fields.password.length > 0;\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        try {\r\n            await Auth.signIn(fields.email, fields.password);\r\n            userHasAuthenticated(true)\r\n            history.push(\"/\");\r\n        } catch (e) {\r\n            onError(e);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"Login\">\r\n            <Form onSubmit={handleSubmit}>\r\n                <FormGroup controlId=\"email\">\r\n                    <FormLabel>Email</FormLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={fields.email}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"password\" >\r\n                    <FormLabel>Password</FormLabel>\r\n                    <FormControl\r\n                        value={fields.password}\r\n                        onChange={handleFieldChange}\r\n                        type=\"password\"\r\n                    />\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    type=\"submit\"\r\n                    variant=\"dark\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateForm()}\r\n                >\r\n                    {!isLoading && \"Login\"}\r\n                </LoaderButton>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FormText,\r\n    FormGroup,\r\n    FormControl,\r\n    FormLabel\r\n} from \"react-bootstrap\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport \"./Signup.css\";\r\n\r\nexport default function Signup() {\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        confirmationCode: \"\",\r\n    });\r\n    const history = useHistory();\r\n    const [newUser, setNewUser] = useState(null);\r\n    const { userHasAuthenticated } = useAppContext();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    function validateForm() {\r\n        return (\r\n            fields.email.length > 0 &&\r\n            fields.password.length > 0 &&\r\n            fields.password === fields.confirmPassword\r\n        );\r\n    }\r\n\r\n    function validateConfirmationForm() {\r\n        return fields.confirmationCode.length > 0;\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const newUser = await Auth.signUp({\r\n                username: fields.email,\r\n                password: fields.password,\r\n            });\r\n            setIsLoading(false);\r\n            setNewUser(newUser);\r\n        } catch (e) {\r\n            onError(e);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    async function handleConfirmationSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            await Auth.confirmSignUp(fields.email, fields.confirmationCode);\r\n            await Auth.signIn(fields.email, fields.password);\r\n\r\n            userHasAuthenticated(true);\r\n            history.push(\"/\");\r\n        } catch (e) {\r\n            onError(e);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    function renderConfirmationForm() {\r\n        return (\r\n            <form onSubmit={handleConfirmationSubmit}>\r\n                <FormGroup controlId=\"confirmationCode\" >\r\n                    <FormLabel>Confirmation Code</FormLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"tel\"\r\n                        onChange={handleFieldChange}\r\n                        value={fields.confirmationCode}\r\n                    />\r\n                    <FormText controlId=\"confirmationCodeHelpBlock\">Please check your email for the code.</FormText>\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    type=\"submit\"\r\n                    variant=\"dark\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateConfirmationForm()}\r\n                >\r\n                    Verify\r\n        </LoaderButton>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    function renderForm() {\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <FormGroup controlId=\"email\" >\r\n                    <FormLabel>Email</FormLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={fields.email}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"password\">\r\n                    <FormLabel>Password</FormLabel>\r\n                    <FormControl\r\n                        type=\"password\"\r\n                        value={fields.password}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"confirmPassword\" >\r\n                    <FormLabel>Confirm Password</FormLabel>\r\n                    <FormControl\r\n                        type=\"password\"\r\n                        onChange={handleFieldChange}\r\n                        value={fields.confirmPassword}\r\n                    />\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    variant=\"dark\"\r\n                    type=\"submit\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateForm()}\r\n                >\r\n                    Signup\r\n        </LoaderButton>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"Signup\">\r\n            {newUser === null ? renderForm() : renderConfirmationForm()}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./containers/Home\";\r\nimport NotFound from \"./containers/NotFound\";\r\nimport AllPatients from \"./containers/AllPatients\"\r\nimport Login from \"./containers/Login\"\r\nimport Signup from \"./containers/Signup\"\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/'>\r\n        <Home />\r\n      </Route>\r\n      <Route exact path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route exact path=\"/signup\">\r\n        <Signup />\r\n      </Route>\r\n      <Route path=\"/allPatients\">\r\n        <AllPatients />\r\n      </Route>\r\n      <Route>\r\n        <NotFound />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { AppContext } from \"./libs/contextLib\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport \"./App.css\";\r\nimport Routes from \"./Routes\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n    const history = useHistory();\r\n    const [isAuthenticated, userHasAuthenticated] = useState(false);\r\n    const [isAuthenticating, setIsAuthenticating] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        onLoad();\r\n    }, []);\r\n\r\n    async function onLoad() {\r\n        try {\r\n            await Auth.currentSession() \r\n            userHasAuthenticated(true);\r\n        }\r\n        catch (e) {\r\n            if (e !== 'No current user') {\r\n                alert(e);\r\n            }\r\n        }\r\n\r\n        setIsAuthenticating(false);\r\n    }\r\n\r\n    async function handleLogout() {\r\n        await Auth.signOut();\r\n        userHasAuthenticated(false);\r\n        history.push(\"/login\");\r\n    }\r\n    return (\r\n\r\n        !isAuthenticating &&\r\n        <Container fluid className=\"App\">\r\n            <Navbar bg=\"dark\" variant=\"dark\" collapseOnSelect>\r\n                <Navbar.Brand href=\"#/\">\r\n                    Physico\r\n                </Navbar.Brand>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Nav>\r\n                        {isAuthenticated\r\n                            ? <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\r\n                            : <>\r\n                                <Nav.Link href=\"#/signup\">Singup</Nav.Link>\r\n                                <Nav.Link href=\"#/login\">Login</Nav.Link>\r\n                            </>\r\n                        }\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\r\n                <Routes />\r\n            </AppContext.Provider>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default App;","export default {\r\n    s3: {\r\n      REGION: \"eu-west-1\",\r\n      BUCKET: \"physico\"\r\n    },\r\n    apiGateway: {\r\n      REGION: \"eu-west-1\",\r\n      URL: \" https://c9p5u8gzw7.execute-api.eu-west-1.amazonaws.com/Stage\"\r\n    },\r\n    cognito: {\r\n      REGION: \"eu-west-1\",\r\n      USER_POOL_ID: \"eu-west-1_8FIYqRDvq\",\r\n      APP_CLIENT_ID: \"22bekhru649s03rhqpa7viui70\",\r\n      IDENTITY_POOL_ID: \"eu-west-1:916f14a0-e460-4cef-9a48-2874df73bb9e\"\r\n    }\r\n  };\r\n\r\n  ","import React from 'react'\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { render } from 'react-dom';\r\nimport App from './App'\r\nimport config from './config';\r\nimport { Amplify, Auth } from 'aws-amplify';\r\n\r\n\r\nAmplify.configure({\r\n   Auth: {\r\n     mandatorySignIn: true,\r\n     region: config.cognito.REGION,\r\n     userPoolId: config.cognito.USER_POOL_ID,\r\n     identityPoolId: config.cognito.IDENTITY_POOL_ID,\r\n     userPoolWebClientId: config.cognito.APP_CLIENT_ID\r\n   },\r\n   Storage: {\r\n     region: config.s3.REGION,\r\n     bucket: config.s3.BUCKET,\r\n     identityPoolId: config.cognito.IDENTITY_POOL_ID\r\n   },\r\n   API: {\r\n     endpoints: [\r\n       {\r\n         name: \"physico\",\r\n         endpoint: config.apiGateway.URL,\r\n         region: config.apiGateway.REGION,\r\n         custom_header: async () => { //With Cognito User Pools use this: \r\n            return { Authorization: `Bearer ${(await Auth.currentSession()).getIdToken().getJwtToken()}`\r\n         } \r\n         \r\n         }\r\n       },\r\n     ]\r\n   }\r\n });\r\n\r\nrender(\r\n   <Router basename=\"/\" >\r\n        <App />\r\n   </Router>\r\n,document.getElementById('root'))\r\n    \r\n\r\n\r\n\r\n"],"sourceRoot":""}